from __future__ import annotations

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from bot.utils.chat_manager import cleanup_previous_messages, track_message
from services.photo_nutrition import analyze_food_photo


async def handle_photo_nutrition(update: Update, context: ContextTypes.DEFAULT_TYPE):
	"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'AI –ö–ë–ñ–£ –ø–æ —Ñ–æ—Ç–æ'"""
	await cleanup_previous_messages(update, context)
	if update.effective_chat:
		context.chat_data["last_chat_id"] = update.effective_chat.id

	text = """
üì∏ *AI –∞–Ω–∞–ª–∏–∑ –ø–∏—Ç–∞–Ω–∏—è –ø–æ —Ñ–æ—Ç–æ*

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –±–ª—é–¥–∞, –∏ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é:
‚Ä¢ –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å
‚Ä¢ –ë–µ–ª–∫–∏, –∂–∏—Ä—ã, —É–≥–ª–µ–≤–æ–¥—ã
‚Ä¢ –ü—Ä–∏–º–µ—Ä–Ω—ã–π –≤–µ—Å –ø–æ—Ä—Ü–∏–∏
‚Ä¢ –ü–∏—â–µ–≤—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å

üìù *–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ö–æ—Ä–æ—à–µ–µ —Ñ–æ—Ç–æ:*
1. –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ
2. –ë–ª—é–¥–æ –≤ —Ü–µ–Ω—Ç—Ä–µ –∫–∞–¥—Ä–∞
3. –í–∏–¥ —Å–≤–µ—Ä—Ö—É –∏–ª–∏ –ø–æ–¥ —É–≥–ª–æ–º 45¬∞
4. –ò–∑–±–µ–≥–∞–π—Ç–µ –±–ª–∏–∫–æ–≤ –∏ —Ç–µ–Ω–µ–π

‚ö†Ô∏è *–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:*
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –º–Ω–æ–≥–æ–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–µ –±–ª—é–¥–∞
‚Ä¢ –ù–µ—Ç–∏–ø–∏—á–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
‚Ä¢ –ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ
"""

	keyboard = [
		[InlineKeyboardButton("üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="send_photo")],
		[InlineKeyboardButton("‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="how_it_works")],
		[InlineKeyboardButton("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–Ω–∞–ª–∏–∑—ã", callback_data="recent_analyses")],
		[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_root")],
	]

	reply_markup = InlineKeyboardMarkup(keyboard)

	message = await context.bot.send_message(
		chat_id=update.effective_chat.id,
		text=text,
		reply_markup=reply_markup,
		parse_mode='Markdown'
	)

	# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
	context.user_data['waiting_for_photo'] = True
	await track_message(context, message.message_id)


async def handle_food_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
	"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ –µ–¥—ã"""
	if not context.user_data.get('waiting_for_photo', False):
		return

	# –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
	context.user_data['waiting_for_photo'] = False

	# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
	processing_msg = await context.bot.send_message(
		chat_id=update.effective_chat.id,
		text="üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–æ—Ç–æ...",
		parse_mode='Markdown'
	)

	# –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ AI
	photo_file = await update.message.photo[-1].get_file()
	analysis = await analyze_food_photo(photo_file.file_path)

	# –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
	await context.bot.delete_message(
		chat_id=update.effective_chat.id,
		message_id=processing_msg.message_id
	)

	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
	text = f"""
üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞*

üçΩ *–ë–ª—é–¥–æ:* {analysis['dish_name']}
‚öñÔ∏è *–í–µ—Å –ø–æ—Ä—Ü–∏–∏:* ~{analysis['weight']}–≥

üìà *–ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:*
‚Ä¢ –ö–∞–ª–æ—Ä–∏–∏: {analysis['calories']} –∫–∫–∞–ª
‚Ä¢ –ë–µ–ª–∫–∏: {analysis['protein']}–≥
‚Ä¢ –ñ–∏—Ä—ã: {analysis['fat']}–≥
‚Ä¢ –£–≥–ª–µ–≤–æ–¥—ã: {analysis['carbs']}–≥

üí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*
{analysis['recommendations']}
"""

	keyboard = [
		[InlineKeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫", callback_data=f"add_to_diary:{analysis['id']}")],
		[InlineKeyboardButton("üîÑ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ", callback_data="photo_nutrition")],
		[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_root")],
	]

	reply_markup = InlineKeyboardMarkup(keyboard)

	message = await context.bot.send_message(
		chat_id=update.effective_chat.id,
		text=text,
		reply_markup=reply_markup,
		parse_mode='Markdown'
	)

	await track_message(context, message.message_id)
from __future__ import annotations

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from bot.utils.chat_manager import cleanup_previous_messages, track_message
from services.weekly_menu import generate_weekly_menu


async def handle_weekly_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
	"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é'"""
	await cleanup_previous_messages(update, context)
	if update.effective_chat:
		context.chat_data["last_chat_id"] = update.effective_chat.id

	user_id = update.effective_user.id
	weekly_menu = await generate_weekly_menu(user_id)

	text = f"""
üìÖ *–í–∞—à–µ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é*

üçΩ *–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å —É—á–µ—Ç–æ–º:*
‚Ä¢ –¶–µ–ª–∏: {weekly_menu['goal']}
‚Ä¢ –°—É—Ç–æ—á–Ω–∞—è –Ω–æ—Ä–º–∞: {weekly_menu['calories']} –∫–∫–∞–ª
‚Ä¢ –ë–ñ–£: {weekly_menu['protein']}–≥ –±–µ–ª–∫–∞, {weekly_menu['carbs']}–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤, {weekly_menu['fat']}–≥ –∂–∏—Ä–æ–≤

üìã *–î–Ω–∏ –Ω–µ–¥–µ–ª–∏:*
"""

	# –î–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
	days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
	for i, day in enumerate(days):
		text += f"‚Ä¢ {day}: {weekly_menu['days'][i]['calories']} –∫–∫–∞–ª\\n"

	keyboard = [
		[InlineKeyboardButton("üìã –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", callback_data="menu_monday")],
		[InlineKeyboardButton("üìã –í—Ç–æ—Ä–Ω–∏–∫", callback_data="menu_tuesday")],
		[InlineKeyboardButton("üìã –°—Ä–µ–¥–∞", callback_data="menu_wednesday")],
		[InlineKeyboardButton("üìã –ß–µ—Ç–≤–µ—Ä–≥", callback_data="menu_thursday")],
		[InlineKeyboardButton("üìã –ü—è—Ç–Ω–∏—Ü–∞", callback_data="menu_friday")],
		[InlineKeyboardButton("üìã –°—É–±–±–æ—Ç–∞", callback_data="menu_saturday")],
		[InlineKeyboardButton("üìã –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", callback_data="menu_sunday")],
		[InlineKeyboardButton("üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ –º–µ–Ω—é", callback_data="generate_new_menu")],
		[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_root")],
	]

	reply_markup = InlineKeyboardMarkup(keyboard)

	message = await context.bot.send_message(
		chat_id=update.effective_chat.id,
		text=text,
		reply_markup=reply_markup,
		parse_mode='Markdown'
	)

	await track_message(context, message.message_id)